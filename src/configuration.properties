#CURSO

TCURSO_INSERT=INSERT INTO CURSO (TITULO, FECHAIMPARTIR, IDCURSO, ESTADOCURSO, CantidadPagarColectivo, IS_CANCELABLE, PORCENTAJE_DEVOLUCION) VALUES (?, ?, ?, ?, ?, ?, ?)
TCURSO_ABRIR_CURSO=UPDATE CURSO SET PLAZAS = ?, FECHAAPERTURA = ?, FECHACIERRE = ?, ESTADOCURSO = 'ABIERTO' WHERE IDCURSO = ?
TCURSO_CHANGE_START_DATE=UPDATE CURSO SET FECHAIMPARTIR = ? WHERE CODIGOCURSO = ?
TCURSO_LIST_ALL_COURSES=SELECT * FROM CURSO
T_CURSO_IS_ABIERTO=SELECT COUNT(C.IDCURSO) AS CURSO_NUM FROM CURSO C WHERE C.IDCURSO = ? AND C.ESTADOCURSO = 'ABIERTO'
TCURSO_LIST_SCHEDULED_COURSES=SELECT * FROM CURSO WHERE ESTADOCURSO = 'PLANIFICADO'
TCURSO_MAX_NUMBER=select max(IDCURSO) from curso
TCURSO_LIST_OPENED_COURSES=SELECT * FROM CURSO C WHERE C.ESTADOCURSO='ABIERTO' AND C.FECHAAPERTURA IS NOT NULL AND C.FECHACIERRE IS NOT NULL AND C.PLAZAS > 0

TCURSO_CANCELAR_ID=UPDATE CURSO SET ESTADOCURSO='CANCELADO' WHERE IDCURSO=?
TCURSO_SELECCIONAR_ABIERTOS_PLANIFICADOS=SELECT * FROM CURSO C WHERE (C.ESTADOCURSO='ABIERTO' AND C.FECHAAPERTURA IS NOT NULL AND C.FECHACIERRE IS NOT NULL AND C.PLAZAS > 0) OR ESTADOCURSO='PLANIFICADO'
TCURSO_SELECCIONAR_CURSO_INSCRITO=SELECT * FROM INSCRIPCION i, COLEGIADO c, CURSO ce WHERE ce.IdCurso=i.CursoId and c.dni=i.colegiadoDni and c.dni=? and ce.ESTADOCURSO='ABIERTO' and i.fechaCancelacion IS NULL

# COLEGIADO

TCOLEGIADO_ADD=INSERT INTO COLEGIADO (dni, nombre, apellidos, poblacion, telefono, titulacion, centro, ano, numeroCuenta, fechaSolicitud, estado, numero, TipoColectivo) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "Colegiado")

TCOLEGIADO_FIND_ALL=SELECT dni, nombre, apellidos, poblacion FROM COLEGIADO
TCOLEGIADO_ALL=SELECT * from COLEGIADO

TCOLEGIADO_FIND_BY_YEAR=SELECT * FROM COLEGIADO WHERE ano = ?
TCOLEGIADO_FIND_BY_DNI=SELECT * FROM COLEGIADO WHERE DNI = ?

TCOLEGIADO_ASIGNACION_NUMERO_COLEGIADO=UPDATE COLEGIADO SET NUMERO = ? WHERE DNI = ? AND NUMERO = ''
TCOLEGIADO_FIND_ALL=SELECT * FROM COLEGIADO
TCOLEGIADO_FIND_ALL_CANDIDATES=SELECT * FROM COLEGIADO WHERE ESTADO = 'PENDIENTE' AND (NUMERO = '' OR NUMERO IS NULL)
TCOLEGIADO_FIND_TITULACION_BY_DNI=SELECT TITULACION FROM COLEGIADO WHERE DNI = ?
TCOLEGIADO_LASTNUMBER=SELECT MAX(NUMERO) AS MAX_NUM FROM COLEGIADO WHERE NUMERO <> ''
TCOLEGIADO_UPDATE_ESTADO=UPDATE COLEGIADO SET ESTADO = ? WHERE NUMERO = ?
TCOLEGIADO_UPDATE_ESTADO_BYDNI=UPDATE COLEGIADO SET ESTADO = ? WHERE DNI = ?
TCOLEGIADO_CANTIDAD_DEUDADA=select sum(cantidad) as cantidadTotal from recibo where dniColegiado = ?
TCOLEGIADO_BORRAR_COLEGIADO=delete from colegiado where DNI = ?

#SESION

TSESION_ADD= insert into sesion (idCurso, horaInicio, horaFin) values (?, ?, ?)

#PROFESORES

TPROFESOR_ASIGNAR_CURSO=update profesor set idCurso = ? where nombre = ?
TPROFESOR_FIND_PROFESORES_LIBRES=SELECT * FROM PROFESOR WHERE idCurso is null

#RECIBOS

TRECIBO_FIND_BY_YEAR_COLEGIADO=select * from recibo where DNIColegiado = ? AND year = ?
TRECIBO_MAX_NUMBER= SELECT max(numeroRecibo) from recibo
TRECIBO_INSERT= INSERT INTO recibo (numeroRecibo, dniColegiado, year, cantidad) values (?,?,?,?)

TCOLEGIADO_FIND_BY_YEAR=SELECT * FROM COLEGIADO WHERE ANNIO = ?

# INSCRIPCIONES
TINSCRIPCION_CURSO_ADD=INSERT INTO INSCRIPCION_CURSO(FECHAAPERTURA, FECHACIERRE, ID_CURSO) VALUES(?, ?, ?)
TINSCRIPCION_FIND_FECHA = SELECT FechaPreInscripcion FROM INSCRIPCION WHERE ColegiadoDNI=? AND CursoId=? AND Estado = 'PREINSCRITO'
TINSCRIPCION_PAGAR = UPDATE INSCRIPCION SET Estado = ?, FormaDePago = ? WHERE ColegiadoDNI=? AND CursoId=?
TINSCRIPCION_FIND_ALL_COURSE=SELECT COUNT(*) FROM INSCRIPCION WHERE Estado<>'CANCELADO' and CursoId=?
TINSCRIPCION_FIND_ALL=SELECT * FROM INSCRIPCION i, COLEGIADO c, CURSO ce WHERE i.Estado<>'CANCELADO' and ce.IdCurso=i.CursoId and i.CursoId=? and c.DNI=i.colegiadoDNI
TINSCRIPCION_CANCELAR_PREINSCRITO_PENDIENTE=UPDATE INSCRIPCION SET Incidencias=?, fechaCancelacion=?, Estado=?, Devolver=? where CursoId=? and colegiadoDNI=?
TINSCRIPCION_CANCELAR_TARJETA=UPDATE INSCRIPCION SET incidencias=?, fechaCancelacion=?, estado=?, cantidadAbonada=?, Devolver=? where CursoId=? and colegiadoDni=?
TINSCRIPCION_CANCELAR_TRANSF=UPDATE INSCRIPCION SET incidencias=?, fechaCancelacion=?, estado=?, Devolver=? where CursoId=? and colegiadoDni=?
TINSCRIPCION_FIND_CANCELADAS=SELECT * FROM INSCRIPCION i, COLEGIADO c, CURSO ce WHERE ce.IdCurso=i.CursoId and i.CursoId=? and c.dni=i.colegiadoDni and fechaCancelacion IS NOT NULL
TINSCRIPCION_FIND_CANCELADA=SELECT * FROM INSCRIPCION i, COLEGIADO c, CURSO ce WHERE ce.IdCurso=i.CursoId and i.CursoId=? and i.colegiadoDni=? and c.dni=i.colegiadoDni and fechaCancelacion IS NOT NULL
TINSCRIPCION_FIND_CANCELAR=SELECT * FROM INSCRIPCION i, COLEGIADO c, CURSO ce WHERE ce.IdCurso=i.CursoId and i.CursoId=? and i.colegiadoDni=? and c.dni=i.colegiadoDni and fechaCancelacion IS NULL
TINSCRIPCION_FIND_BY_DNI=SELECT * FROM INSCRIPCION WHERE colegiadoDni=? and Estado<>'CANCELADO'
TINSCRIPCION_DELETE_BY_DNI=DELETE from INSCRIPCION where colegiadoDNI = ?

# -- LISTA DE ESPERA DE UN CURSO

LISTA_ESPERA_CURSO_ADD=INSERT INTO LISTA_ESPERA(ID_CURSO, ID_COLEGIADO, POSICION) VALUES(?, ?, ?)
LISTA_ESPERA_CURSO_FINDBYCURSOID=SELECT LT.ID_COLEGIADO AS DNI, LT.ID_CURSO, C.NOMBRE AS NOMBRE, LT.POSICION AS POSICION FROM LISTA_ESPERA LT INNER JOIN COLEGIADO C ON(LT.ID_COLEGIADO = C.DNI) WHERE Id_Curso = ?
LISTA_ESPERA_CURSO_FINDBYDNI=SELECT LT.ID_COLEGIADO AS DNI, LT.ID_CURSO, C.NOMBRE AS NOMBRE, LT.POSICION AS POSICION FROM LISTA_ESPERA LT INNER JOIN COLEGIADO C ON(LT.ID_COLEGIADO = C.DNI) WHERE C.DNI = ? AND LT.ID_CURSO = ?
LISTA_ESPERA_CURSO_MAX_POSICION=SELECT MAX(POSICION) AS MAX_POSITION FROM LISTA_ESPERA WHERE ID_CURSO = ?

 # -- TRANSFERENCIA
TINSCRIPCION_FIND_DATOS_TRANSFERENCIA = SELECT c.dni, c.nombre, c.apellidos, i.cantidadAbonada, i.fechaTransferencia, i.codigoTransferencia, i.fechaPreinscripcion, i.cantidadPagar, i.estado, i.incidencias, i.Devolver FROM Inscripcion i, Colegiado c WHERE c.dni=i.colegiadoDni and i.cursoId=? and i.estado='PENDIENTE'

TINSCRIPCION_FIND_DATOS_TRANSFERENCIA_PROCESADA = SELECT c.dni, c.nombre, c.apellidos, i.cantidadAbonada, i.cantidadPagar, i.estado, i.incidencias, i.devolver FROM Inscripcion i, Colegiado c WHERE c.dni=i.colegiadoDni and i.cursoId=? and (i.estado='INSCRITO' or i.estado='CANCELADO') and i.formaDePago = 'TRANSFERENCIA'

TINSCRIPCION_PROCESAR_TRANSFERENCIAS = UPDATE INSCRIPCION SET estado=?, incidencias=?, devolver=? where cursoId=? and colegiadoDni=?

TINSCRIPCION_BANCO_PAGAR = UPDATE INSCRIPCION SET fechaTransferencia = ?, codigoTransferencia = ?, cantidadAbonada = ? where cursoId = ? and colegiadoDni = ?

LISTA_INSCRIPCIONES_ABIERTAS=SELECT * FROM CURSO WHERE EstadoCurso = "ABIERTO"
TINSCRIPCION_CURSO_OPEN=UPDATE CURSO SET FECHAAPERTURA = ?, FECHACIERRE = ?, PLAZAS = ? WHERE IDCURSO = ?

LISTA_INSCRIPCIONES = SELECT * FROM CURSO WHERE EstadoCurso = "ABIERTO" OR EstadoCurso = "CERRADO"

PLAZAS_LIBRES = SELECT COUNT(*) AS TOTAL FROM INSCRIPCION WHERE CURSOID = ? AND ESTADO != "CANCELADO"

INSCRIPCION_COLEGIADO = INSERT INTO INSCRIPCION(COLEGIADODNI, CURSOID, FECHAPREINSCRIPCION, CANTIDADPAGAR, ESTADO) VALUES(?, ?, ?, ?, ?)

TINSCRIPCION_LISTADO_COLEGIADO_INSCRITOS_CURSO=SELECT COLEGIADODNI, CURSOID, FECHAPREINSCRIPCION, CANTIDADPAGAR, ESTADO FROM INSCRIPCION I INNER JOIN COLEGIADO C ON (I.COLEGIADO_ID = C.ID) ORDER BY C.APELLIDOS, C.NOMBRE

IS_INSCRITO = SELECT COUNT(*) AS TOTAL FROM INSCRIPCION WHERE ColegiadoDNI = ? and CursoID = ?

BUSCAR_COLEGIADO_NUM_COLEGIADO = SELECT * FROM COLEGIADO WHERE NUMERO = ?


# Solicitud de servicios

LISTAR_SOLICITUDES_SERVICIOS = SELECT * FROM SolicitudPeritos where dniPerito is NULL

INSERT_SOLICITUDES_SERVICIOS = INSERT INTO SolicitudPeritos(CorreoElectronico, DNI, Descripcion, Urgente, AgeSolicitud, Estado) VALUES(?, ?, ?, ?, ?, "SinAsignar")

ASOCIA_SOLICITUD_SERVICIO = UPDATE SolicitudPeritos SET dniPerito = ?, Estado = 'Asignada' where id = ?

CANCELA_PERICIAL = UPDATE SolicitudPeritos SET Estado = 'Cancelada', FechaCancelacion = ? where id = ?

# Peritos

LISTAR_PERITOS_ORDENADOS = SELECT * FROM COLEGIADO where Perito = 'RENOVADO' ORDER BY PosicionPerito ASC

ACTUALIZA_POSICIONES_LISTA = UPDATE COLEGIADO SET POSICIONPERITO = COLEGIADO.PosicionPerito -1 WHERE PosicionPerito > ?

ACTUALIZA_POSICIONES_LISTA_ADD = UPDATE COLEGIADO SET POSICIONPERITO = COLEGIADO.PosicionPerito +1 WHERE PosicionPerito >= ?

ACTUALIZA_POSICION_PERITO = UPDATE Colegiado SET PosicionPerito = (SELECT MAX(PosicionPerito)+1 FROM Colegiado) WHERE DNI = ?

LISTA_INSCRIPCIONES_COLEGIADO = SELECT nombre, apellidos, CANTIDADPAGAR, FechaPreInscripcion, CantidadAbonada, INSCRIPCION.ESTADO FROM INSCRIPCION INNER JOIN COLEGIADO ON INSCRIPCION.ColegiadoDNI = COLEGIADO.DNI WHERE CursoID = ? ORDER BY nombre, apellidos DESC

RECUPERAR_POSICION = UPDATE Colegiado SET PosicionPerito = PosicionAnterior where DNI = ?


TCOLEGIADO_ADD_PERITO=update colegiado set perito = 'RENOVADO', posicionperito = ? where DNI = ?
TCOLEGIADO_RENOVAR_PERITO=update colegiado set perito = 'RENOVADO' where DNI = ?
TCOLEGIADO_ULTIMA_POSICION_PERITO=select max(posicionPerito) from colegiado
TCOLEGIADO_FIND_ALL_PERITOS=select * from colegiado where posicionperito <> '' order by posicionPerito
TCOLEGIADO_FIND_PERITO_BY_DNI = select * from colegiado where posicionPerito <> '' and dni = ? order by posicionPerito

#VISADOS

TSOLICITUDVISADO_ADD = insert into solicitudVisados (descripcion, estado, dniPerito, dniVisado) values (?,?,?,?)
TSOLICITUDVISADO_FIND_ALL= select * from solicitudVisados
TPERITO_FIND_DISPONIBLES_PARA_VISADO= select * from colegiado where visado = 0
TSOLICITUDVISADO_SET_DNI_VISADO = update solicitudVisados set dniVisado = ?, estado = 'ASIGNADA' where dniPerito = ?
TPERITO_SET_VISADO_TRUE = update colegiado set visado = true where DNI = ?


